{"version":3,"sources":["webpack://projectstorm/react-diagrams-defaults/webpack/universalModuleDefinition","webpack://projectstorm/react-diagrams-defaults/./src/index.ts","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelModel.tsx","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkModel.ts","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkPointWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkSegmentWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeModel.ts","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortLabelWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortModel.ts","webpack://projectstorm/react-diagrams-defaults/external \"@emotion/react\"","webpack://projectstorm/react-diagrams-defaults/external \"@emotion/styled\"","webpack://projectstorm/react-diagrams-defaults/external \"@projectstorm/geometry\"","webpack://projectstorm/react-diagrams-defaults/external \"@projectstorm/react-canvas-core\"","webpack://projectstorm/react-diagrams-defaults/external \"@projectstorm/react-diagrams-core\"","webpack://projectstorm/react-diagrams-defaults/external \"lodash\"","webpack://projectstorm/react-diagrams-defaults/external \"react\"","webpack://projectstorm/react-diagrams-defaults/webpack/bootstrap","webpack://projectstorm/react-diagrams-defaults/webpack/startup"],"names":["root","factory","exports","module","define","amd","this","DefaultLabelFactory","AbstractReactFactory","super","event","DefaultLabelWidget","model","DefaultLabelModel","LabelModel","options","offsetY","type","label","deserialize","data","serialize","S","Label","div","React","Component","props","getOptions","Keyframes","keyframes","selected","css","Path","path","p","DefaultLinkFactory","DefaultLinkWidget","link","diagramEngine","engine","DefaultLinkModel","stroke","selectedColor","color","strokeWidth","width","d","LinkModel","curvyness","port","alignment","PortModelAlignment","RIGHT","LEFT","TOP","points","length","curve","BezierCurve","setSource","getFirstPoint","getPosition","setTarget","getLastPoint","setSourceControl","clone","setTargetControl","sourcePort","getSourceControl","translate","calculateControlOffset","getSourcePort","targetPort","getTargetControl","getTargetPort","getSVGCurve","addLabel","labelOb","setLabel","fireEvent","PointTop","circle","DefaultLinkPointWidget","state","point","cx","x","cy","y","r","fill","isSelected","colorSelected","className","onMouseLeave","setState","onMouseEnter","getID","getLink","opacity","DefaultLinkSegmentWidget","Bottom","cloneElement","generateLinkSegment","ref","forwardRef","Top","strokeLinecap","onSelection","extras","strokeOpacity","onContextMenu","isLocked","preventDefault","remove","refPaths","renderPoints","setRenderedPaths","map","current","index","shiftKey","getPoints","getMaxNumberPointsPerLink","PointModel","position","getRelativeMousePoint","addPoint","persist","stopPropagation","forceUpdate","getActionEventBus","fireAction","key","extraProps","id","createRef","push","getFactoryForLink","paths","generateLink","getSVGPath","onMouseDown","addPointToLink","generatePoint","j","LinkWidget","generateLinePath","i","testName","DefaultNodeFactory","DefaultNodeWidget","node","DefaultNodeModel","NodeModel","name","portsOut","portsIn","lookupTable","doClone","removePort","in","splice","indexOf","addPort","after","DefaultPortModel","_","portsInOrder","getPortFromID","portsOutOrder","Node","background","Title","TitleName","Ports","PortsContainer","generatePort","DefaultPortLabel","getInPorts","getOutPorts","DefaultPortFactory","AbstractModelFactory","PortLabel","Port","PortWidget","PortModel","createLinkModel","setSourcePort","setTargetPort","generateModel","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"mappings":"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","file":"index.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"projectstorm/react-diagrams-defaults\"] = factory();\n\telse\n\t\troot[\"projectstorm/react-diagrams-defaults\"] = factory();\n})(this, function() {\nreturn ","export * from './label/DefaultLabelFactory';\nexport * from './label/DefaultLabelModel';\nexport * from './label/DefaultLabelWidget';\n\nexport * from './link/DefaultLinkFactory';\nexport * from './link/DefaultLinkModel';\nexport * from './link/DefaultLinkWidget';\nexport * from './link/DefaultLinkSegmentWidget';\nexport * from './link/DefaultLinkPointWidget';\n\nexport * from './node/DefaultNodeFactory';\nexport * from './node/DefaultNodeModel';\nexport * from './node/DefaultNodeWidget';\n\nexport * from './port/DefaultPortFactory';\nexport * from './port/DefaultPortLabelWidget';\nexport * from './port/DefaultPortModel';\n","import * as React from 'react';\nimport { DefaultLabelModel } from './DefaultLabelModel';\nimport { DefaultLabelWidget } from './DefaultLabelWidget';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultLabelFactory extends AbstractReactFactory<DefaultLabelModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultLabelWidget model={event.model} />;\n\t}\n\n\tgenerateModel(event): DefaultLabelModel {\n\t\treturn new DefaultLabelModel();\n\t}\n}\n","import { DiagramEngine, LabelModel, LabelModelGenerics, LabelModelOptions } from '@projectstorm/react-diagrams-core';\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultLabelModelOptions extends LabelModelOptions {\n\tlabel?: string;\n}\n\nexport interface DefaultLabelModelGenerics extends LabelModelGenerics {\n\tOPTIONS: DefaultLabelModelOptions;\n}\n\nexport class DefaultLabelModel extends LabelModel<DefaultLabelModelGenerics> {\n\tconstructor(options: DefaultLabelModelOptions = {}) {\n\t\tsuper({\n\t\t\toffsetY: options.offsetY == null ? -23 : options.offsetY,\n\t\t\ttype: 'default',\n\t\t\t...options\n\t\t});\n\t}\n\n\tsetLabel(label: string) {\n\t\tthis.options.label = label;\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.label = event.data.label;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tlabel: this.options.label\n\t\t};\n\t}\n}\n","import * as React from 'react';\nimport { DefaultLabelModel } from './DefaultLabelModel';\nimport styled from '@emotion/styled';\n\nexport interface DefaultLabelWidgetProps {\n\tmodel: DefaultLabelModel;\n}\n\nnamespace S {\n\texport const Label = styled.div`\n\t\tbackground: rgba(0, 0, 0, 0.8);\n\t\tborder-radius: 5px;\n\t\tcolor: white;\n\t\tfont-size: 12px;\n\t\tpadding: 4px 8px;\n\t\tfont-family: sans-serif;\n\t\tuser-select: none;\n\t`;\n}\n\nexport class DefaultLabelWidget extends React.Component<DefaultLabelWidgetProps> {\n\trender() {\n\t\treturn <S.Label>{this.props.model.getOptions().label}</S.Label>;\n\t}\n}\n","import * as React from 'react';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkWidget } from './DefaultLinkWidget';\nimport styled from '@emotion/styled';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { css, keyframes } from '@emotion/react';\n\nnamespace S {\n\texport const Keyframes = keyframes`\n\t\tfrom {\n\t\t\tstroke-dashoffset: 24;\n\t\t}\n\t\tto {\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t`;\n\n\tconst selected = css`\n\t\tstroke-dasharray: 10, 2;\n\t\tanimation: ${Keyframes} 1s linear infinite;\n\t`;\n\n\texport const Path = styled.path<{ selected: boolean }>`\n\t\t${(p) => p.selected && selected};\n\t\tfill: none;\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class DefaultLinkFactory<Link extends DefaultLinkModel = DefaultLinkModel> extends AbstractReactFactory<\n\tLink,\n\tDiagramEngine\n> {\n\tconstructor(type = 'default') {\n\t\tsuper(type);\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultLinkWidget link={event.model} diagramEngine={this.engine} />;\n\t}\n\n\tgenerateModel(event): Link {\n\t\treturn new DefaultLinkModel() as Link;\n\t}\n\n\tgenerateLinkSegment(model: Link, selected: boolean, path: string) {\n\t\treturn (\n\t\t\t<S.Path\n\t\t\t\tselected={selected}\n\t\t\t\tstroke={selected ? model.getOptions().selectedColor : model.getOptions().color}\n\t\t\t\tstrokeWidth={model.getOptions().width}\n\t\t\t\td={path}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import {\n\tDiagramEngine,\n\tLabelModel,\n\tLinkModel,\n\tLinkModelGenerics,\n\tLinkModelListener,\n\tPortModel,\n\tPortModelAlignment\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLabelModel } from '../label/DefaultLabelModel';\nimport { BezierCurve } from '@projectstorm/geometry';\nimport { BaseEntityEvent, BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultLinkModelListener extends LinkModelListener {\n\tcolorChanged?(event: BaseEntityEvent<DefaultLinkModel> & { color: null | string }): void;\n\n\twidthChanged?(event: BaseEntityEvent<DefaultLinkModel> & { width: 0 | number }): void;\n}\n\nexport interface DefaultLinkModelOptions extends BaseModelOptions {\n\twidth?: number;\n\tcolor?: string;\n\tselectedColor?: string;\n\tcurvyness?: number;\n\ttype?: string;\n\ttestName?: string;\n}\n\nexport interface DefaultLinkModelGenerics extends LinkModelGenerics {\n\tLISTENER: DefaultLinkModelListener;\n\tOPTIONS: DefaultLinkModelOptions;\n}\n\nexport class DefaultLinkModel extends LinkModel<DefaultLinkModelGenerics> {\n\tconstructor(options: DefaultLinkModelOptions = {}) {\n\t\tsuper({\n\t\t\ttype: 'default',\n\t\t\twidth: options.width || 3,\n\t\t\tcolor: options.color || 'gray',\n\t\t\tselectedColor: options.selectedColor || 'rgb(0,192,255)',\n\t\t\tcurvyness: 50,\n\t\t\t...options\n\t\t});\n\t}\n\n\tcalculateControlOffset(port: PortModel): [number, number] {\n\t\tif (port.getOptions().alignment === PortModelAlignment.RIGHT) {\n\t\t\treturn [this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.LEFT) {\n\t\t\treturn [-this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.TOP) {\n\t\t\treturn [0, -this.options.curvyness];\n\t\t}\n\t\treturn [0, this.options.curvyness];\n\t}\n\n\tgetSVGPath(): string {\n\t\tif (this.points.length == 2) {\n\t\t\tconst curve = new BezierCurve();\n\t\t\tcurve.setSource(this.getFirstPoint().getPosition());\n\t\t\tcurve.setTarget(this.getLastPoint().getPosition());\n\t\t\tcurve.setSourceControl(this.getFirstPoint().getPosition().clone());\n\t\t\tcurve.setTargetControl(this.getLastPoint().getPosition().clone());\n\n\t\t\tif (this.sourcePort) {\n\t\t\t\tcurve.getSourceControl().translate(...this.calculateControlOffset(this.getSourcePort()));\n\t\t\t}\n\n\t\t\tif (this.targetPort) {\n\t\t\t\tcurve.getTargetControl().translate(...this.calculateControlOffset(this.getTargetPort()));\n\t\t\t}\n\t\t\treturn curve.getSVGCurve();\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\twidth: this.options.width,\n\t\t\tcolor: this.options.color,\n\t\t\tcurvyness: this.options.curvyness,\n\t\t\tselectedColor: this.options.selectedColor\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.color = event.data.color;\n\t\tthis.options.width = event.data.width;\n\t\tthis.options.curvyness = event.data.curvyness;\n\t\tthis.options.selectedColor = event.data.selectedColor;\n\t}\n\n\taddLabel(label: LabelModel | string) {\n\t\tif (label instanceof LabelModel) {\n\t\t\treturn super.addLabel(label);\n\t\t}\n\t\tlet labelOb = new DefaultLabelModel();\n\t\tlabelOb.setLabel(label);\n\t\treturn super.addLabel(labelOb);\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.options.width = width;\n\t\tthis.fireEvent({ width }, 'widthChanged');\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.options.color = color;\n\t\tthis.fireEvent({ color }, 'colorChanged');\n\t}\n}\n","import * as React from 'react';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport styled from '@emotion/styled';\n\nexport interface DefaultLinkPointWidgetProps {\n\tpoint: PointModel;\n\tcolor?: string;\n\tcolorSelected: string;\n}\n\nexport interface DefaultLinkPointWidgetState {\n\tselected: boolean;\n}\n\nnamespace S {\n\texport const PointTop = styled.circle`\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class DefaultLinkPointWidget extends React.Component<DefaultLinkPointWidgetProps, DefaultLinkPointWidgetState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { point } = this.props;\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<circle\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={5}\n\t\t\t\t\tfill={this.state.selected || this.props.point.isSelected() ? this.props.colorSelected : this.props.color}\n\t\t\t\t/>\n\t\t\t\t<S.PointTop\n\t\t\t\t\tclassName=\"point\"\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t}}\n\t\t\t\t\tdata-id={point.getID()}\n\t\t\t\t\tdata-linkid={point.getLink().getID()}\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={15}\n\t\t\t\t\topacity={0.0}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { DefaultLinkFactory } from './DefaultLinkFactory';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\n\nexport interface DefaultLinkSegmentWidgetProps {\n\tpath: string;\n\tlink: DefaultLinkModel;\n\tselected: boolean;\n\tforwardRef: React.RefObject<SVGPathElement>;\n\tfactory: DefaultLinkFactory;\n\tdiagramEngine: DiagramEngine;\n\tonSelection: (selected: boolean) => any;\n\textras: object;\n}\n\nexport class DefaultLinkSegmentWidget extends React.Component<DefaultLinkSegmentWidgetProps> {\n\trender() {\n\t\tconst Bottom = React.cloneElement(\n\t\t\tthis.props.factory.generateLinkSegment(\n\t\t\t\tthis.props.link,\n\t\t\t\tthis.props.selected || this.props.link.isSelected(),\n\t\t\t\tthis.props.path\n\t\t\t),\n\t\t\t{\n\t\t\t\tref: this.props.forwardRef\n\t\t\t}\n\t\t);\n\n\t\tconst Top = React.cloneElement(Bottom, {\n\t\t\tstrokeLinecap: 'round',\n\t\t\tonMouseLeave: () => {\n\t\t\t\tthis.props.onSelection(false);\n\t\t\t},\n\t\t\tonMouseEnter: () => {\n\t\t\t\tthis.props.onSelection(true);\n\t\t\t},\n\t\t\t...this.props.extras,\n\t\t\tref: null,\n\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\tstrokeOpacity: this.props.selected ? 0.1 : 0,\n\t\t\tstrokeWidth: 20,\n\t\t\tfill: 'none',\n\t\t\tonContextMenu: () => {\n\t\t\t\tif (!this.props.link.isLocked()) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.props.link.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t{Bottom}\n\t\t\t\t{Top}\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { DiagramEngine, LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkPointWidget } from './DefaultLinkPointWidget';\nimport { DefaultLinkSegmentWidget } from './DefaultLinkSegmentWidget';\nimport { MouseEvent } from 'react';\n\nexport interface DefaultLinkProps {\n\tlink: DefaultLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n\trenderPoints?: boolean;\n\tselected?: (event: MouseEvent) => any;\n}\n\nexport interface DefaultLinkState {\n\tselected: boolean;\n}\n\nexport class DefaultLinkWidget extends React.Component<DefaultLinkProps, DefaultLinkState> {\n\trefPaths: React.RefObject<SVGPathElement>[];\n\n\tconstructor(props: DefaultLinkProps) {\n\t\tsuper(props);\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trenderPoints() {\n\t\treturn this.props.renderPoints ?? true;\n\t}\n\n\tcomponentDidUpdate(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.props.link.setRenderedPaths([]);\n\t}\n\n\taddPointToLink(event: MouseEvent, index: number) {\n\t\tif (\n\t\t\t!event.shiftKey &&\n\t\t\t!this.props.link.isLocked() &&\n\t\t\tthis.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst point = new PointModel({\n\t\t\t\tlink: this.props.link,\n\t\t\t\tposition: this.props.diagramEngine.getRelativeMousePoint(event)\n\t\t\t});\n\t\t\tthis.props.link.addPoint(point, index);\n\t\t\tevent.persist();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.forceUpdate(() => {\n\t\t\t\tthis.props.diagramEngine.getActionEventBus().fireAction({\n\t\t\t\t\tevent,\n\t\t\t\t\tmodel: point\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tgeneratePoint(point: PointModel): JSX.Element {\n\t\treturn (\n\t\t\t<DefaultLinkPointWidget\n\t\t\t\tkey={point.getID()}\n\t\t\t\tpoint={point as any}\n\t\t\t\tcolorSelected={this.props.link.getOptions().selectedColor}\n\t\t\t\tcolor={this.props.link.getOptions().color}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tconst ref = React.createRef<SVGPathElement>();\n\t\tthis.refPaths.push(ref);\n\t\treturn (\n\t\t\t<DefaultLinkSegmentWidget\n\t\t\t\tkey={`link-${id}`}\n\t\t\t\tpath={path}\n\t\t\t\tselected={this.state.selected}\n\t\t\t\tdiagramEngine={this.props.diagramEngine}\n\t\t\t\tfactory={this.props.diagramEngine.getFactoryForLink(this.props.link)}\n\t\t\t\tlink={this.props.link}\n\t\t\t\tforwardRef={ref}\n\t\t\t\tonSelection={(selected) => {\n\t\t\t\t\tthis.setState({ selected: selected });\n\t\t\t\t}}\n\t\t\t\textras={extraProps}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.getPoints();\n\t\tvar paths = [];\n\t\tthis.refPaths = [];\n\n\t\tif (points.length === 2) {\n\t\t\tpaths.push(\n\t\t\t\tthis.generateLink(\n\t\t\t\t\tthis.props.link.getSVGPath(),\n\t\t\t\t\t{\n\t\t\t\t\t\tonMouseDown: (event) => {\n\t\t\t\t\t\t\tthis.props.selected?.(event);\n\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'0'\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// draw the link as dangeling\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[1]));\n\t\t\t}\n\t\t} else {\n\t\t\t//draw the multiple anchors and complex line instead\n\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tLinkWidget.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\t\t\t\t\t'data-point': j,\n\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\tthis.props.selected?.(event);\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tj\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.renderPoints()) {\n\t\t\t\t//render the circles\n\t\t\t\tfor (let i = 1; i < points.length - 1; i++) {\n\t\t\t\t\tpaths.push(this.generatePoint(points[i]));\n\t\t\t\t}\n\n\t\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\t\tpaths.push(this.generatePoint(points[points.length - 1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn <g data-default-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n\t}\n}\n","import * as React from 'react';\nimport { DefaultNodeModel } from './DefaultNodeModel';\nimport { DefaultNodeWidget } from './DefaultNodeWidget';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class DefaultNodeFactory extends AbstractReactFactory<DefaultNodeModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultNodeWidget engine={this.engine} node={event.model} />;\n\t}\n\n\tgenerateModel(event): DefaultNodeModel {\n\t\treturn new DefaultNodeModel();\n\t}\n}\n","import * as _ from 'lodash';\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\nimport { DefaultPortModel } from '../port/DefaultPortModel';\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\n\tname?: string;\n\tcolor?: string;\n}\n\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\n\tOPTIONS: DefaultNodeModelOptions;\n}\n\nexport class DefaultNodeModel extends NodeModel<DefaultNodeModelGenerics> {\n\tprotected portsIn: DefaultPortModel[];\n\tprotected portsOut: DefaultPortModel[];\n\n\tconstructor(name: string, color: string);\n\tconstructor(options?: DefaultNodeModelOptions);\n\tconstructor(options: any = {}, color?: string) {\n\t\tif (typeof options === 'string') {\n\t\t\toptions = {\n\t\t\t\tname: options,\n\t\t\t\tcolor: color\n\t\t\t};\n\t\t}\n\t\tsuper({\n\t\t\ttype: 'default',\n\t\t\tname: 'Untitled',\n\t\t\tcolor: 'rgb(0,192,255)',\n\t\t\t...options\n\t\t});\n\t\tthis.portsOut = [];\n\t\tthis.portsIn = [];\n\t}\n\n\tdoClone(lookupTable: {}, clone: any): void {\n\t\tclone.portsIn = [];\n\t\tclone.portsOut = [];\n\t\tsuper.doClone(lookupTable, clone);\n\t}\n\n\tremovePort(port: DefaultPortModel): void {\n\t\tsuper.removePort(port);\n\t\tif (port.getOptions().in) {\n\t\t\tthis.portsIn.splice(this.portsIn.indexOf(port), 1);\n\t\t} else {\n\t\t\tthis.portsOut.splice(this.portsOut.indexOf(port), 1);\n\t\t}\n\t}\n\n\taddPort<T extends DefaultPortModel>(port: T): T {\n\t\tsuper.addPort(port);\n\t\tif (port.getOptions().in) {\n\t\t\tif (this.portsIn.indexOf(port) === -1) {\n\t\t\t\tthis.portsIn.push(port);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.portsOut.indexOf(port) === -1) {\n\t\t\t\tthis.portsOut.push(port);\n\t\t\t}\n\t\t}\n\t\treturn port;\n\t}\n\n\taddInPort(label: string, after = true): DefaultPortModel {\n\t\tconst p = new DefaultPortModel({\n\t\t\tin: true,\n\t\t\tname: label,\n\t\t\tlabel: label,\n\t\t\talignment: PortModelAlignment.LEFT\n\t\t});\n\t\tif (!after) {\n\t\t\tthis.portsIn.splice(0, 0, p);\n\t\t}\n\t\treturn this.addPort(p);\n\t}\n\n\taddOutPort(label: string, after = true): DefaultPortModel {\n\t\tconst p = new DefaultPortModel({\n\t\t\tin: false,\n\t\t\tname: label,\n\t\t\tlabel: label,\n\t\t\talignment: PortModelAlignment.RIGHT\n\t\t});\n\t\tif (!after) {\n\t\t\tthis.portsOut.splice(0, 0, p);\n\t\t}\n\t\treturn this.addPort(p);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.name = event.data.name;\n\t\tthis.options.color = event.data.color;\n\t\tthis.portsIn = _.map(event.data.portsInOrder, (id) => {\n\t\t\treturn this.getPortFromID(id);\n\t\t}) as DefaultPortModel[];\n\t\tthis.portsOut = _.map(event.data.portsOutOrder, (id) => {\n\t\t\treturn this.getPortFromID(id);\n\t\t}) as DefaultPortModel[];\n\t}\n\n\tserialize(): any {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tname: this.options.name,\n\t\t\tcolor: this.options.color,\n\t\t\tportsInOrder: _.map(this.portsIn, (port) => {\n\t\t\t\treturn port.getID();\n\t\t\t}),\n\t\t\tportsOutOrder: _.map(this.portsOut, (port) => {\n\t\t\t\treturn port.getID();\n\t\t\t})\n\t\t};\n\t}\n\n\tgetInPorts(): DefaultPortModel[] {\n\t\treturn this.portsIn;\n\t}\n\n\tgetOutPorts(): DefaultPortModel[] {\n\t\treturn this.portsOut;\n\t}\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { DefaultNodeModel } from './DefaultNodeModel';\nimport { DefaultPortLabel } from '../port/DefaultPortLabelWidget';\nimport styled from '@emotion/styled';\n\nnamespace S {\n\texport const Node = styled.div<{ background: string; selected: boolean }>`\n\t\tbackground-color: ${(p) => p.background};\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tcolor: white;\n\t\tborder: solid 2px black;\n\t\toverflow: visible;\n\t\tfont-size: 11px;\n\t\tborder: solid 2px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'black')};\n\t`;\n\n\texport const Title = styled.div`\n\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\tdisplay: flex;\n\t\twhite-space: nowrap;\n\t\tjustify-items: center;\n\t`;\n\n\texport const TitleName = styled.div`\n\t\tflex-grow: 1;\n\t\tpadding: 5px 5px;\n\t`;\n\n\texport const Ports = styled.div`\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\n\t`;\n\n\texport const PortsContainer = styled.div`\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\t&:first-of-type {\n\t\t\tmargin-right: 10px;\n\t\t}\n\n\t\t&:only-child {\n\t\t\tmargin-right: 0px;\n\t\t}\n\t`;\n}\n\nexport interface DefaultNodeProps {\n\tnode: DefaultNodeModel;\n\tengine: DiagramEngine;\n}\n\n/**\n * Default node that models the DefaultNodeModel. It creates two columns\n * for both all the input ports on the left, and the output ports on the right.\n */\nexport class DefaultNodeWidget extends React.Component<DefaultNodeProps> {\n\tgeneratePort = (port) => {\n\t\treturn <DefaultPortLabel engine={this.props.engine} port={port} key={port.getID()} />;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<S.Node\n\t\t\t\tdata-default-node-name={this.props.node.getOptions().name}\n\t\t\t\tselected={this.props.node.isSelected()}\n\t\t\t\tbackground={this.props.node.getOptions().color}>\n\t\t\t\t<S.Title>\n\t\t\t\t\t<S.TitleName>{this.props.node.getOptions().name}</S.TitleName>\n\t\t\t\t</S.Title>\n\t\t\t\t<S.Ports>\n\t\t\t\t\t<S.PortsContainer>{_.map(this.props.node.getInPorts(), this.generatePort)}</S.PortsContainer>\n\t\t\t\t\t<S.PortsContainer>{_.map(this.props.node.getOutPorts(), this.generatePort)}</S.PortsContainer>\n\t\t\t\t</S.Ports>\n\t\t\t</S.Node>\n\t\t);\n\t}\n}\n","import { DefaultPortModel } from './DefaultPortModel';\nimport { AbstractModelFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class DefaultPortFactory extends AbstractModelFactory<DefaultPortModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateModel(): DefaultPortModel {\n\t\treturn new DefaultPortModel({\n\t\t\tname: 'unknown'\n\t\t});\n\t}\n}\n","import * as React from 'react';\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\nimport { DefaultPortModel } from './DefaultPortModel';\nimport styled from '@emotion/styled';\n\nexport interface DefaultPortLabelProps {\n\tport: DefaultPortModel;\n\tengine: DiagramEngine;\n}\n\nnamespace S {\n\texport const PortLabel = styled.div`\n\t\tdisplay: flex;\n\t\tmargin-top: 1px;\n\t\talign-items: center;\n\t`;\n\n\texport const Label = styled.div`\n\t\tpadding: 0 5px;\n\t\tflex-grow: 1;\n\t`;\n\n\texport const Port = styled.div`\n\t\twidth: 15px;\n\t\theight: 15px;\n\t\tbackground: rgba(255, 255, 255, 0.1);\n\n\t\t&:hover {\n\t\t\tbackground: rgb(192, 255, 0);\n\t\t}\n\t`;\n}\n\nexport class DefaultPortLabel extends React.Component<DefaultPortLabelProps> {\n\trender() {\n\t\tconst port = (\n\t\t\t<PortWidget engine={this.props.engine} port={this.props.port}>\n\t\t\t\t<S.Port />\n\t\t\t</PortWidget>\n\t\t);\n\t\tconst label = <S.Label>{this.props.port.getOptions().label}</S.Label>;\n\n\t\treturn (\n\t\t\t<S.PortLabel>\n\t\t\t\t{this.props.port.getOptions().in ? port : label}\n\t\t\t\t{this.props.port.getOptions().in ? label : port}\n\t\t\t</S.PortLabel>\n\t\t);\n\t}\n}\n","import {\n\tLinkModel,\n\tPortModel,\n\tPortModelAlignment,\n\tPortModelGenerics,\n\tPortModelOptions\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from '../link/DefaultLinkModel';\nimport { AbstractModelFactory, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultPortModelOptions extends PortModelOptions {\n\tlabel?: string;\n\tin?: boolean;\n}\n\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\n\tOPTIONS: DefaultPortModelOptions;\n}\n\nexport class DefaultPortModel extends PortModel<DefaultPortModelGenerics> {\n\tconstructor(isIn: boolean, name?: string, label?: string);\n\tconstructor(options: DefaultPortModelOptions);\n\tconstructor(options: DefaultPortModelOptions | boolean, name?: string, label?: string) {\n\t\tif (!!name) {\n\t\t\toptions = {\n\t\t\t\tin: !!options,\n\t\t\t\tname: name,\n\t\t\t\tlabel: label\n\t\t\t};\n\t\t}\n\t\toptions = options as DefaultPortModelOptions;\n\t\tsuper({\n\t\t\tlabel: options.label || options.name,\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\n\t\t\ttype: 'default',\n\t\t\t...options\n\t\t});\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.in = event.data.in;\n\t\tthis.options.label = event.data.label;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tin: this.options.in,\n\t\t\tlabel: this.options.label\n\t\t};\n\t}\n\n\tlink<T extends LinkModel>(port: PortModel, factory?: AbstractModelFactory<T>): T {\n\t\tlet link = this.createLinkModel(factory);\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port);\n\t\treturn link as T;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tif (port instanceof DefaultPortModel) {\n\t\t\treturn this.options.in !== port.getOptions().in;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(factory?: AbstractModelFactory<LinkModel>): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\tif (!link && factory) {\n\t\t\treturn factory.generateModel({});\n\t\t}\n\t\treturn link || new DefaultLinkModel();\n\t}\n}\n","module.exports = require(\"@emotion/react\");;","module.exports = require(\"@emotion/styled\");;","module.exports = require(\"@projectstorm/geometry\");;","module.exports = require(\"@projectstorm/react-canvas-core\");;","module.exports = require(\"@projectstorm/react-diagrams-core\");;","module.exports = require(\"lodash\");;","module.exports = require(\"react\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(418);\n"],"sourceRoot":""}